<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace = "com.example.dongsungsi.dao.TutorialDao">
<!--     List<Tutorial> findByPublished(String published);-->

    <!--    // 제목 검색을 위한 메소드-->
    <!--    List<Tutorial> findByTitleContaining(String title);-->

    <!--    // 모든 데이터 목록 조회-->
    <!--    List<Tutorial> findAll();-->

    <!--    // id에 해당하는 값을 조회-->
    <!--    // Optional : null을 방지하는 클래스-->
    <!--    Optional<Tutorial> findById(Long id);-->
    <!--*게시된 글 찾기-->
    <select id = "findByPublished"
            parameterType = "String"
            resultType = "com.example.dongsungsi.model.Tutorial">
        SELECT ID,
               TITLE,
               DESCRIPTION,
               PUBLISHED,
               DELETE_YN,
               INSERT_TIME,
               UPDATE_TIME,
               DELETE_TIME
        FROM TB_TUTORIAL
        WHERE DELETE_YN = 'N'
          AND PUBLISHED = #{published}
    </select>

    <!--*제목으로 게시글 찾기-->
    <select id = "findByTitleContaining"
            parameterType = "String"
            resultType = "com.example.dongsungsi.model.Tutorial">
        SELECT ID,
               TITLE,
               DESCRIPTION,
               PUBLISHED,
               DELETE_YN,
               INSERT_TIME,
               UPDATE_TIME,
               DELETE_TIME
        FROM TB_TUTORIAL
        WHERE DELETE_YN = 'N'
        AND TITLE LIKE '%'|| #{title} ||'%'
        <!--'%'|| #{title} ||'%' => '#{title}'-->
    </select>


    <!--*게시된 전부 찾기(삭제된 게시글 제외)-->
    <select id = "findAll"
            resultType = "com.example.dongsungsi.model.Tutorial">
        SELECT ID,
               TITLE,
               DESCRIPTION,
               PUBLISHED,
               DELETE_YN,
               INSERT_TIME,
               UPDATE_TIME,
               DELETE_TIME
        FROM TB_TUTORIAL
        WHERE DELETE_YN = 'N'
    </select>

    <!--*id 번호로 게시글 찾기-->
    <select id = "findById"
            parameterType = "Long"
            resultType = "com.example.dongsungsi.model.Tutorial">
        SELECT ID,
               TITLE,
               DESCRIPTION,
               PUBLISHED,
               DELETE_YN,
               INSERT_TIME,
               UPDATE_TIME,
               DELETE_TIME
        FROM TB_TUTORIAL
        WHERE DELETE_YN = 'N'
          AND ID = #{id}
    </select>

    <!--*Create, insertTutorial 메소드에 값이 정상적으로 들어가면 그 값을 받아 쿼리문을 실행함-->
    <insert id = "insertTutorial"
            parameterType = "com.example.dongsungsi.model.Tutorial">
        INSERT INTO TB_TUTORIAL(ID,
                                TITLE,
                                DESCRIPTION,
                                PUBLISHED,
                                INSERT_TIME)
        VALUES (SQ_TUTORIAL.NEXTVAL,
                #{title},
                #{description},
                'Y',
                TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'))
    </insert>

    <!--*Update-->
    <update id = "updateTutorial"
            parameterType = "com.example.dongsungsi.model.Tutorial">
        UPDATE TB_TUTORIAL
        SET TITLE       = #{title},
            DESCRIPTION = #{description},
            PUBLISHED   = DECODE(#{published}, 'true', 'Y', 'N'),
            UPDATE_TIME = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE ID = #{id}
    </update>

    <!--*Delete-->
    <update id = "deleteTutorial"
            parameterType = "Long">
        UPDATE TB_TUTORIAL
        SET DELETE_YN   = 'Y',
            DELETE_TIME = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE ID = #{id}
    </update>

    <!--*DeleteAll-->
    <update id = "deleteAll">
        UPDATE TB_TUTORIAL
        SET DELETE_YN   = 'Y',
            DELETE_TIME = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
    </update>

</mapper>











